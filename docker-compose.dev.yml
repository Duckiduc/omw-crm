# Development version with hot reload
services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: omw-crm-db-dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: omw_crm
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d omw_crm"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API (Development with hot reload)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: omw-crm-backend-dev
    restart: unless-stopped
    ports:
      - "3002:3002"
    environment:
      NODE_ENV: development
      PORT: 3002
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: omw_crm
      DB_USER: postgres
      DB_PASSWORD: postgres
      JWT_SECRET: dev-secret-key-not-for-production
      JWT_EXPIRES_IN: 7d
      FRONTEND_URL: http://localhost:5173
      # Development CORS origins (comma-separated)
      CORS_ORIGINS: "http://localhost:5173,http://localhost:3000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: npm run dev

  # Frontend Application (Development with hot reload)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: omw-crm-frontend-dev
    restart: unless-stopped
    ports:
      - "5173:5173"
    environment:
      VITE_API_URL: http://localhost:3002/api
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm run dev -- --host 0.0.0.0

volumes:
  postgres_data_dev:
    driver: local

networks:
  default:
    name: omw-crm-network-dev
